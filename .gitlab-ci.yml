include:
  - local: '.gitlab-ci-config.yml'

image: gumjoe/wacc-ci-scala:slim

stages:
  - build
  - test

build:
  stage: build
  before_script:
    - echo "Cleaning Scala..."
    - scala clean .
    - echo "Clean complete!"
  script:
    - echo "Compiling program..."
    - scala compile .
    - echo "Compilation complete!"

parser_syntax_basic:
  variables:
    TEST_NAME: "basic"
    RUN_TEST: "$RUN_SYNTAX_BASIC"
  <<: *test_job_template

parser_syntax_array:
  variables:
    TEST_NAME: "array"
    RUN_TEST: "$RUN_SYNTAX_ARRAY"
  <<: *test_job_template

parser_syntax_expressions:
  variables:
    TEST_NAME: "expressions"
    RUN_TEST: "$RUN_SYNTAX_EXPRESSIONS"
  <<: *test_job_template

parser_syntax_function:
  variables:
    TEST_NAME: "function"
    RUN_TEST: "$RUN_SYNTAX_FUNCTION"
  <<: *test_job_template

parser_syntax_if:
  variables:
    TEST_NAME: "if"
    RUN_TEST: "$RUN_SYNTAX_IF"
  <<: *test_job_template

parser_syntax_io:
  variables:
    TEST_NAME: "io"
    RUN_TEST: "$RUN_SYNTAX_IO"
  <<: *test_job_template

parser_syntax_pairs:
  variables:
    TEST_NAME: "pairs"
    RUN_TEST: "$RUN_SYNTAX_PAIRS"
  <<: *test_job_template

parser_syntax_runtime:
  variables:
    TEST_NAME: "runtime"
    RUN_TEST: "$RUN_SYNTAX_RUNTIME"
  <<: *test_job_template

parser_syntax_scope:
  variables:
    TEST_NAME: "scope"
    RUN_TEST: "$RUN_SYNTAX_SCOPE"
  <<: *test_job_template

parser_syntax_sequence:
  variables:
    TEST_NAME: "sequence"
    RUN_TEST: "$RUN_SYNTAX_SEQUENCE"
  <<: *test_job_template

parser_syntax_variables:
  variables:
    TEST_NAME: "variables"
    RUN_TEST: "$RUN_SYNTAX_VARIABLES"
  <<: *test_job_template

parser_syntax_while:
  variables:
    TEST_NAME: "while"
    RUN_TEST: "$RUN_SYNTAX_WHILE"
  <<: *test_job_template
